# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure(2) do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://atlas.hashicorp.com/search.
  config.vm.box = "chef/fedora-21"
  config.vm.box_url = "https://atlas.hashicorp.com/chef/boxes/fedora-21"

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"
  # config.vm.network "public_network", bridge: "en0: Wi-Fi (AirPort)"
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"
  # config.vm.synced_folder "~/icloud_drive/dotfiles", "/home/vagrant/dotfiles"
  config.vm.synced_folder "~/.ssh", "/home/vagrant/ssh"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  # config.vm.provider "virtualbox" do |vb|
  #   # Display the VirtualBox GUI when booting the machine
  #   vb.gui = true
  #
  #   # Customize the amount of memory on the VM:
  #   vb.memory = "1024"
  # end
  #
  # View the documentation for the provider you are using for more
  # information on available options.

  # Define a Vagrant Push strategy for pushing to Atlas. Other push strategies
  # such as FTP and Heroku are also available. See the documentation at
  # https://docs.vagrantup.com/v2/push/atlas.html for more information.
  # config.push.define "atlas" do |push|
  #   push.app = "YOUR_ATLAS_USERNAME/YOUR_APPLICATION_NAME"
  # end

  # Enable provisioning with a shell script. Additional provisioners such as
  # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
  # documentation for more information about their specific syntax and use.
  # config.vm.provision "shell", inline: <<-SHELL
  #   sudo apt-get update
  #   sudo apt-get install -y apache2
  # SHELL

  $root_script = <<-ROOT_SCRIPT
    systemctl stop firewalld
    systemctl disable firewalld
    yum -y update

  #   yum groupinstall -y "Development Tools"
  #   yum install -y wget
  #   yum install -y git
  #   yum install -y vim
  #   yum install -y ruby
  #   yum install -y cabal-install
  
    yum groupinstall -y 'Development Tools'
    yum install -y curl git irb m4 ruby texinfo bzip2-devel curl-devel expat-devel ncurses-devel zlib-devel
  ROOT_SCRIPT
  config.vm.provision "shell", inline: $root_script, privileged: true

  # TODO: 初期状態では$PATHに登録されてないパスがある(例：~/.cabal)
  $user_script = <<-USER_SCRIPT
    # Clone dotfiles from bitbucket
    cd ~
    mkdir .ssh
    cp ssh/config .ssh/
    cp -r ssh/bitbucket .ssh/bitbucket
    git clone git@bitbucket.org:kurozu/dotfiles
    sh dotfiles/setup.sh

    # install Linuxbrew
    # ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/linuxbrew/go/install)"
    # export PATH=${HOME}/.linuxbrew:${PATH}
    # export MANPATH="${HOME}/.linuxbrew/share/man:${MANPATH}"
    # export INFOPATH="${HOME}/.linuxbrew/share/info:${INFOPATH}"
    
    curl https://raw.githubusercontent.com/Shougo/neobundle.vim/master/bin/install.sh | sh

    # cabal update
    # cabal install alex happy
    # cabal install hoogle
    # cabal install hlint
    # hoogle data
  USER_SCRIPT
  config.vm.provision "shell", inline: $user_script, privileged: false

end
